{"version":3,"sources":["utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable.tsx","api.ts","components/Pages/PeoplePage.tsx","components/Pages/Home.tsx","components/Pages/PageNotFound.tsx","App.tsx","index.tsx"],"names":["getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","to","search","PeopleFilters","setSearchParams","selectedGender","get","allCenturies","getAll","query","centuryCalc","century","includes","filter","age","className","cn","sex","onChange","e","newValue","target","type","placeholder","centuries","length","Loader","SortingType","sortBy","sortType","currentSortType","sortOrder","nextSortOrder","sort","getSearchParams","PersonInfo","person","people","location","useLocation","personFather","find","p","name","fatherName","personMother","motherName","pathname","slug","born","died","PeopleTable","queryParams","genderFilter","centuryFilter","map","Number","queryFilter","filteredPeopleBySex","filteredPeopleByQuery","toLowerCase","filteredPeopleByCentury","Math","floor","currentSortBy","currentSortOrder","displayPeople","a","b","comparisonValue","localeCompare","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","isLoading","setIsLoading","noPeopleMessage","setNoPeopleMessage","error","setError","useEffect","getPeople","catch","finally","HomePage","PageNotFound","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.cd5d35f8.chunk.js","sourcesContent":["export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from './SearchLink';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const selectedGender = searchParams.get('sex');\n  const allCenturies = searchParams.getAll('centuries');\n  const query = searchParams.get('query');\n\n  const centuryCalc = (century: string) => {\n    if (allCenturies.includes(century)) {\n      return allCenturies.filter(age => age !== century);\n    }\n\n    return [...allCenturies, century];\n  };\n\n  const handleQueryChange = (newValue: string) => {\n    if (newValue === '') {\n      searchParams.delete('query');\n    } else {\n      searchParams.set('query', newValue);\n    }\n\n    setSearchParams(searchParams);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({ 'is-active': selectedGender === null })}\n          params={{ sex: null }}\n        >\n          All\n\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': selectedGender === 'm' })}\n          params={{ sex: 'm' }}\n        >\n          Male\n\n        </SearchLink>\n        <SearchLink\n          className={cn({ 'is-active': selectedGender === 'f' })}\n          params={{ sex: 'f' }}\n        >\n          Female\n\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            value={query || ''}\n            onChange={(e) => handleQueryChange(e.target.value)}\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('16') })}\n              params={{\n                centuries: centuryCalc('16'),\n              }}\n            >\n              16\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('17') })}\n              params={{\n                centuries: centuryCalc('17'),\n              }}\n            >\n              17\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('18') })}\n              params={{\n                centuries: centuryCalc('18'),\n              }}\n            >\n              18\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('19') })}\n              params={{\n                centuries: centuryCalc('19'),\n              }}\n            >\n              19\n            </SearchLink>\n\n            <SearchLink\n              data-cy=\"century\"\n              className={cn('button mr-1',\n                { 'is-info': allCenturies.includes('20') })}\n              params={{\n                centuries: centuryCalc('20'),\n              }}\n            >\n              20\n            </SearchLink>\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={cn('button is-success',\n                { 'is-outlined': allCenturies.length !== 0 })}\n              params={{\n                centuries: null,\n              }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            centuries: null,\n            query: null,\n            sex: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useLocation, useSearchParams, NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\nimport { SearchLink } from './SearchLink';\n\ntype SortingTypeProps = {\n  sortType: string | null;\n};\n\nexport const SortingType = ({ sortType: sortBy }: SortingTypeProps) => {\n  const [searchParams] = useSearchParams();\n  const currentSortType = searchParams.get('sort');\n  const sortOrder = searchParams.get('sortOrder');\n\n  const getSearchParams = () => {\n    let nextSortOrder: string | null = 'ASC';\n\n    if (currentSortType === sortBy) {\n      nextSortOrder = sortOrder === 'ASC'\n        ? 'DESC'\n        : null;\n    }\n\n    return {\n      sort: nextSortOrder === null ? null : sortBy,\n      sortOrder: nextSortOrder,\n    };\n  };\n\n  return (\n    <SearchLink params={getSearchParams()}>\n      <span className=\"icon\">\n        <i\n          className={cn('fas fa-sort', {\n            'fa-sort-up': currentSortType === sortBy && sortOrder === 'ASC',\n            'fa-sort-down': currentSortType === sortBy && sortOrder === 'DESC',\n          })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n\ntype PersonInfoProps = {\n  person: Person;\n  people: Person[] | undefined;\n};\n\nconst PersonInfo = ({ person, people }: PersonInfoProps) => {\n  const location = useLocation();\n  const personFather = people?.find(p => p.name === person.fatherName);\n  const personMother = people?.find(p => p.name === person.motherName);\n  const [searchParams] = useSearchParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': location.pathname === `/people/${person.slug}`,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${person.slug}?${searchParams.toString()}`}\n          className={cn({\n            'has-text-danger': person.sex === 'f',\n          })}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {personMother\n          ? (\n            <NavLink\n              className=\"has-text-danger\"\n              to={`/people/${personMother.slug}?${searchParams.toString()}`}\n            >\n              {personMother.name}\n            </NavLink>\n          ) : person.motherName || '-'}\n\n      </td>\n      <td>\n        {personFather\n          ? (\n            <NavLink\n              to={`/people/${personFather.slug}?${searchParams.toString()}`}\n            >\n              {personFather.name}\n            </NavLink>\n          ) : person.fatherName || '-'}\n\n      </td>\n    </tr>\n  );\n};\n\ntype PeopleTableProps = {\n  people: Person[] | undefined;\n};\n\nexport const PeopleTable = ({ people }: PeopleTableProps) => {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const genderFilter = queryParams.get('sex');\n  const centuryFilter = queryParams.getAll('centuries').map(Number);\n  const queryFilter = queryParams.get('query');\n  const [searchParams] = useSearchParams();\n\n  const filteredPeopleBySex = genderFilter\n    ? people?.filter(person => person.sex === genderFilter)\n    : people;\n\n  const filteredPeopleByQuery = queryFilter\n    ? filteredPeopleBySex?.filter(person => {\n      return (\n        person.name.toLowerCase().includes(queryFilter.toLowerCase())\n          // eslint-disable-next-line max-len\n          || person.motherName?.toLowerCase().includes(queryFilter.toLowerCase())\n          // eslint-disable-next-line max-len\n          || person.fatherName?.toLowerCase().includes(queryFilter.toLowerCase())\n      );\n    })\n    : filteredPeopleBySex;\n\n  const filteredPeopleByCentury = centuryFilter.length > 0\n    ? filteredPeopleByQuery?.filter(person => {\n      return centuryFilter.includes(\n        Math.floor((Number(person.born) / 100) + 1),\n      );\n    })\n    : filteredPeopleByQuery;\n\n  const currentSortBy = searchParams.get('sort');\n  const currentSortOrder = searchParams.get('sortOrder');\n  const displayPeople = filteredPeopleByCentury;\n\n  if (currentSortBy) {\n    const sortFunction = (a: Person, b: Person) => {\n      const comparisonValue = currentSortOrder === 'ASC' ? 1 : -1;\n\n      if (currentSortBy === 'name') {\n        return comparisonValue * a.name.localeCompare(b.name);\n      }\n\n      if (currentSortBy === 'sex') {\n        return comparisonValue * a.sex.localeCompare(b.sex);\n      }\n\n      if (currentSortBy === 'born') {\n        return comparisonValue * (a.born - b.born);\n      }\n\n      if (currentSortBy === 'died') {\n        return comparisonValue * (a.died - b.died);\n      }\n\n      return 0;\n    };\n\n    displayPeople?.sort(sortFunction);\n  }\n\n  return (\n    <>\n      {displayPeople?.length !== 0 && (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Name\n                  <SortingType sortType=\"name\" />\n                </span>\n              </th>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Sex\n                  <SortingType sortType=\"sex\" />\n                </span>\n              </th>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Born\n                  <SortingType sortType=\"born\" />\n                </span>\n              </th>\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  Died\n                  <SortingType sortType=\"died\" />\n                </span>\n              </th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n          <tbody>\n            {displayPeople?.map((person) => {\n              return (\n                <PersonInfo\n                  key={person.slug}\n                  person={person}\n                  people={people}\n                />\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n      {displayPeople?.length === 0 && (\n        <p>There are no people matching the current search criteria</p>\n      )}\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { PeopleFilters } from '../PeopleFilters';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>();\n  const [isLoading, setIsLoading] = useState(true);\n  const [noPeopleMessage, setNoPeopleMessage] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then((response) => {\n        setPeople(response);\n\n        if (response.length === 0) {\n          setNoPeopleMessage(true);\n        }\n      })\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n              {error\n              && (\n                <p\n                  data-cy=\"peopleLoadingError\"\n                >\n                  Something went wrong\n                </p>\n              )}\n              {noPeopleMessage && (\n                <p\n                  data-cy=\"noPeopleMessage\"\n                >\n                  There are no people on the server\n\n                </p>\n              )}\n              {!isLoading && <PeopleTable people={people} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  </main>\n);\n","export const PageNotFound: React.FC = () => (\n  <main className=\"section\">\n    <div className=\"container\">\n      <h1 className=\"title\">Page not found</h1>\n    </div>\n  </main>\n);\n","import {\n  Routes, Route, Navigate, NavLink,\n} from 'react-router-dom';\nimport { PeoplePage } from './components/Pages/PeoplePage';\nimport './App.scss';\nimport { HomePage } from './components/Pages/Home';\nimport { PageNotFound } from './components/Pages/PageNotFound';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => (isActive\n                ? 'navbar-item has-background-grey-lighter'\n                : 'navbar-item')}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => (isActive\n                ? 'navbar-item has-background-grey-lighter'\n                : 'navbar-item')}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/people\" element={<PeoplePage />} />\n            <Route path=\"/people/:slug\" element={<PeoplePage />} />\n            <Route path=\"*\" element={<PageNotFound />} />\n          </Routes>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}